// Generated by pscpp compiler

#ifndef Data_List_NonEmpty_H
#define Data_List_NonEmpty_H

#include "purescript.h"

namespace Data_List_NonEmpty {

using namespace purescript;

auto zipWith() -> const boxed&;
auto zipWithA() -> const boxed&;
auto zip() -> boxed;
auto wrappedOperation2() -> const boxed&;
auto wrappedOperation() -> const boxed&;
auto updateAt() -> const boxed&;
auto unzip() -> const boxed&;
auto unsnoc() -> const boxed&;
auto unionBy() -> boxed;
auto _union_() -> const boxed&;
auto uncons() -> const boxed&;
auto toList() -> const boxed&;
auto toUnfoldable() -> const boxed&;
auto tail() -> const boxed&;
auto sortBy() -> boxed;
auto sort() -> const boxed&;
auto snoc() -> const boxed&;
auto singleton() -> boxed;
auto snoc_Prime_() -> const boxed&;
auto reverse() -> boxed;
auto nubBy() -> boxed;
auto nub() -> const boxed&;
auto modifyAt() -> const boxed&;
auto mapWithIndex() -> boxed;
auto lift() -> const boxed&;
auto mapMaybe() -> boxed;
auto partition() -> boxed;
auto span() -> boxed;
auto take() -> boxed;
auto takeWhile() -> boxed;
auto length() -> const boxed&;
auto last() -> const boxed&;
auto intersectBy() -> boxed;
auto intersect() -> const boxed&;
auto insertAt() -> const boxed&;
auto init() -> const boxed&;
auto index() -> const boxed&;
auto head() -> const boxed&;
auto groupBy() -> boxed;
auto group_Prime_() -> const boxed&;
auto group() -> const boxed&;
auto fromList() -> const boxed&;
auto fromFoldable() -> const boxed&;
auto foldM() -> const boxed&;
auto findLastIndex() -> const boxed&;
auto findIndex() -> const boxed&;
auto filterM() -> const boxed&;
auto filter() -> boxed;
auto elemLastIndex() -> const boxed&;
auto elemIndex() -> const boxed&;
auto dropWhile() -> boxed;
auto drop() -> boxed;
auto cons_Prime_() -> const boxed&;
auto cons() -> const boxed&;
auto concatMap() -> boxed;
auto concat() -> const boxed&;
auto catMaybes() -> boxed;
auto appendFoldable() -> const boxed&;

} // end namespace Data_List_NonEmpty

#endif // Data_List_NonEmpty_H

