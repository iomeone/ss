// Generated by pscpp compiler

#ifndef Data_Lazy_H
#define Data_Lazy_H

#include "purescript.h"

namespace Data_Lazy {

using namespace purescript;

auto showLazy() -> const boxed&;
auto semiringLazy() -> const boxed&;
auto semigroupLazy() -> const boxed&;
auto ringLazy() -> const boxed&;
auto monoidLazy() -> const boxed&;
auto lazyLazy() -> boxed;
auto functorLazy() -> boxed;
auto functorWithIndexLazy() -> boxed;
auto invariantLazy() -> boxed;
auto foldableLazy() -> boxed;
auto foldableWithIndexLazy() -> boxed;
auto traversableLazy() -> boxed;
auto traversableWithIndexLazy() -> boxed;
auto foldable1Lazy() -> boxed;
auto traversable1Lazy() -> boxed;
auto extendLazy() -> boxed;
auto eqLazy() -> const boxed&;
auto ordLazy() -> const boxed&;
auto eq1Lazy() -> boxed;
auto ord1Lazy() -> boxed;
auto comonadLazy() -> boxed;
auto commutativeRingLazy() -> const boxed&;
auto euclideanRingLazy() -> const boxed&;
auto boundedLazy() -> const boxed&;
auto applyLazy() -> boxed;
auto bindLazy() -> boxed;
auto heytingAlgebraLazy() -> const boxed&;
auto booleanAlgebraLazy() -> const boxed&;
auto applicativeLazy() -> boxed;
auto monadLazy() -> boxed;
auto defer() -> const boxed&;
auto force() -> const boxed&;

} // end namespace Data_Lazy

#endif // Data_Lazy_H

