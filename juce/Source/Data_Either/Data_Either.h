// Generated by pscpp compiler

#ifndef Data_Either_H
#define Data_Either_H

#include "purescript.h"

namespace Data_Either {

using namespace purescript;

auto Left() -> const boxed&;
auto Right() -> const boxed&;
auto showEither() -> const boxed&;
auto note_Prime_() -> const boxed&;
auto note() -> const boxed&;
auto functorEither() -> boxed;
auto functorWithIndexEither() -> boxed;
auto invariantEither() -> boxed;
auto fromRight() -> const boxed&;
auto fromLeft() -> const boxed&;
auto foldableEither() -> boxed;
auto foldableWithIndexEither() -> boxed;
auto traversableEither() -> boxed;
auto traversableWithIndexEither() -> boxed;
auto extendEither() -> boxed;
auto eqEither() -> const boxed&;
auto ordEither() -> const boxed&;
auto eq1Either() -> const boxed&;
auto ord1Either() -> const boxed&;
auto either() -> const boxed&;
auto hush() -> boxed;
auto isLeft() -> boxed;
auto isRight() -> boxed;
auto choose() -> const boxed&;
auto boundedEither() -> const boxed&;
auto bifunctorEither() -> boxed;
auto bifoldableEither() -> boxed;
auto bitraversableEither() -> boxed;
auto applyEither() -> boxed;
auto bindEither() -> boxed;
auto semigroupEither() -> const boxed&;
auto applicativeEither() -> boxed;
auto monadEither() -> boxed;
auto altEither() -> boxed;

} // end namespace Data_Either

#endif // Data_Either_H

