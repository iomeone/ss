// Generated by pscpp compiler

#ifndef Data_List_Lazy_H
#define Data_List_Lazy_H

#include "purescript.h"

namespace Data_List_Lazy {

using namespace purescript;

auto Pattern() -> const boxed&;
auto zipWith() -> const boxed&;
auto zipWithA() -> const boxed&;
auto zip() -> boxed;
auto updateAt() -> const boxed&;
auto unzip() -> boxed;
auto uncons() -> const boxed&;
auto toUnfoldable() -> const boxed&;
auto takeWhile() -> const boxed&;
auto take() -> const boxed&;
auto tail() -> const boxed&;
auto stripPrefix() -> const boxed&;
auto span() -> const boxed&;
auto snoc() -> const boxed&;
auto singleton() -> const boxed&;
auto showPattern() -> const boxed&;
auto scanrLazy() -> const boxed&;
auto reverse() -> const boxed&;
auto replicateM() -> const boxed&;
auto repeat() -> const boxed&;
auto replicate() -> const boxed&;
auto range() -> const boxed&;
auto partition() -> const boxed&;
auto null() -> boxed;
auto newtypePattern() -> boxed;
auto mapMaybe() -> const boxed&;
auto some() -> const boxed&;
auto many() -> const boxed&;
auto length() -> boxed;
auto last() -> boxed;
auto iterate() -> const boxed&;
auto insertAt() -> const boxed&;
auto init() -> boxed;
auto index() -> const boxed&;
auto head() -> const boxed&;
auto transpose() -> const boxed&;
auto groupBy() -> const boxed&;
auto group() -> const boxed&;
auto fromStep() -> boxed;
auto insertBy() -> const boxed&;
auto insert() -> const boxed&;
auto fromFoldable() -> const boxed&;
auto foldrLazy() -> const boxed&;
auto foldM() -> const boxed&;
auto findIndex() -> const boxed&;
auto findLastIndex() -> const boxed&;
auto filterM() -> const boxed&;
auto filter() -> const boxed&;
auto intersectBy() -> const boxed&;
auto intersect() -> const boxed&;
auto nubBy() -> const boxed&;
auto nub() -> const boxed&;
auto eqPattern() -> const boxed&;
auto ordPattern() -> const boxed&;
auto elemLastIndex() -> const boxed&;
auto elemIndex() -> const boxed&;
auto dropWhile() -> const boxed&;
auto drop() -> const boxed&;
auto slice() -> const boxed&;
auto deleteBy() -> const boxed&;
auto unionBy() -> const boxed&;
auto _union_() -> const boxed&;
auto deleteAt() -> const boxed&;
auto _delete_() -> const boxed&;
auto difference() -> const boxed&;
auto cycle() -> const boxed&;
auto concatMap() -> boxed;
auto concat() -> const boxed&;
auto catMaybes() -> boxed;
auto alterAt() -> const boxed&;
auto modifyAt() -> const boxed&;

} // end namespace Data_List_Lazy

#endif // Data_List_Lazy_H

