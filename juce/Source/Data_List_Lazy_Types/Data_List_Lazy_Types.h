// Generated by pscpp compiler

#ifndef Data_List_Lazy_Types_H
#define Data_List_Lazy_Types_H

#include "purescript.h"

namespace Data_List_Lazy_Types {

using namespace purescript;

auto List() -> const boxed&;
auto Nil() -> const boxed&;
auto Cons() -> const boxed&;
auto NonEmptyList() -> const boxed&;
auto nil() -> boxed;
auto newtypeNonEmptyList() -> boxed;
auto newtypeList() -> boxed;
auto step() -> boxed;
auto semigroupList() -> boxed;
auto showList() -> const boxed&;
auto showNonEmptyList() -> const boxed&;
auto monoidList() -> boxed;
auto lazyList() -> boxed;
auto functorList() -> boxed;
auto functorNonEmptyList() -> boxed;
auto eq1List() -> boxed;
auto eqList() -> const boxed&;
auto eqNonEmptyList() -> const boxed&;
auto ord1List() -> boxed;
auto ordList() -> const boxed&;
auto ordNonEmptyList() -> const boxed&;
auto cons() -> const boxed&;
auto foldableList() -> boxed;
auto extendList() -> boxed;
auto extendNonEmptyList() -> boxed;
auto foldableNonEmptyList() -> boxed;
auto foldableWithIndexList() -> boxed;
auto foldableWithIndexNonEmptyList() -> boxed;
auto functorWithIndexList() -> boxed;
auto functorWithIndexNonEmptyList() -> boxed;
auto toList() -> const boxed&;
auto semigroupNonEmptyList() -> boxed;
auto traversableList() -> boxed;
auto traversableNonEmptyList() -> boxed;
auto traversableWithIndexList() -> boxed;
auto traversableWithIndexNonEmptyList() -> boxed;
auto unfoldable1List() -> boxed;
auto unfoldableList() -> boxed;
auto unfoldable1NonEmptyList() -> boxed;
auto comonadNonEmptyList() -> boxed;
auto monadList() -> boxed;
auto bindList() -> boxed;
auto applyList() -> boxed;
auto applicativeList() -> boxed;
auto applyNonEmptyList() -> boxed;
auto bindNonEmptyList() -> boxed;
auto altNonEmptyList() -> boxed;
auto altList() -> boxed;
auto plusList() -> boxed;
auto alternativeList() -> boxed;
auto monadZeroList() -> boxed;
auto monadPlusList() -> boxed;
auto applicativeNonEmptyList() -> boxed;
auto monadNonEmptyList() -> boxed;

} // end namespace Data_List_Lazy_Types

#endif // Data_List_Lazy_Types_H

