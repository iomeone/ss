// Generated by pscpp compiler

#ifndef Data_Array_H
#define Data_Array_H

#include "purescript.h"

namespace Data_Array {

using namespace purescript;

auto zipWithA() -> const boxed&;
auto zip() -> boxed;
auto updateAtIndices() -> const boxed&;
auto updateAt() -> boxed;
auto unsafeIndex() -> const boxed&;
auto uncons() -> boxed;
auto toUnfoldable() -> const boxed&;
auto takeEnd() -> const boxed&;
auto tail() -> boxed;
auto sortBy() -> const boxed&;
auto sortWith() -> const boxed&;
auto sort() -> const boxed&;
auto singleton() -> const boxed&;
auto null() -> const boxed&;
auto nubByEq() -> const boxed&;
auto nubEq() -> const boxed&;
auto modifyAtIndices() -> const boxed&;
auto mapWithIndex() -> const boxed&;
auto some() -> const boxed&;
auto many() -> const boxed&;
auto insertAt() -> boxed;
auto init() -> const boxed&;
auto index() -> boxed;
auto last() -> const boxed&;
auto unsnoc() -> const boxed&;
auto modifyAt() -> const boxed&;
auto span() -> const boxed&;
auto takeWhile() -> const boxed&;
auto unzip() -> const boxed&;
auto head() -> const boxed&;
auto nubBy() -> const boxed&;
auto nub() -> const boxed&;
auto groupBy() -> const boxed&;
auto group() -> const boxed&;
auto group_Prime_() -> const boxed&;
auto fromFoldable() -> const boxed&;
auto foldRecM() -> const boxed&;
auto foldM() -> const boxed&;
auto findLastIndex() -> boxed;
auto insertBy() -> const boxed&;
auto insert() -> const boxed&;
auto findIndex() -> boxed;
auto intersectBy() -> const boxed&;
auto intersect() -> const boxed&;
auto elemLastIndex() -> const boxed&;
auto elemIndex() -> const boxed&;
auto dropWhile() -> const boxed&;
auto dropEnd() -> const boxed&;
auto deleteAt() -> boxed;
auto deleteBy() -> const boxed&;
auto unionBy() -> const boxed&;
auto _union_() -> const boxed&;
auto _delete_() -> const boxed&;
auto difference() -> const boxed&;
auto concatMap() -> boxed;
auto mapMaybe() -> const boxed&;
auto filterA() -> const boxed&;
auto catMaybes() -> boxed;
auto alterAt() -> const boxed&;
auto fromFoldableImpl() -> const boxed&;
auto range() -> const boxed&;
auto replicate() -> const boxed&;
auto length() -> const boxed&;
auto cons() -> const boxed&;
auto snoc() -> const boxed&;
auto uncons_Prime_() -> const boxed&;
auto indexImpl() -> const boxed&;
auto findIndexImpl() -> const boxed&;
auto findLastIndexImpl() -> const boxed&;
auto _insertAt() -> const boxed&;
auto _deleteAt() -> const boxed&;
auto _updateAt() -> const boxed&;
auto reverse() -> const boxed&;
auto concat() -> const boxed&;
auto filter() -> const boxed&;
auto partition() -> const boxed&;
auto sortImpl() -> const boxed&;
auto slice() -> const boxed&;
auto take() -> const boxed&;
auto drop() -> const boxed&;
auto zipWith() -> const boxed&;
auto unsafeIndexImpl() -> const boxed&;

} // end namespace Data_Array

#endif // Data_Array_H

